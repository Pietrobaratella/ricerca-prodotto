<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Barcode Scanner</title>
    <style>
        
    </style>
    <!-- Include Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div class="container">
    <h1>Barcode Scanner</h1>
    <input type="file" id="image-input" accept="image/*">
    <button id="start-camera">Use Webcam</button>
    <div id="image-container">
        <img id="selected-image" src="" alt="Selected Image">
    </div>
    <div id="camera-container">
        <video id="video" autoplay></video>
    </div>
    <div id="result">
        <h6>Codice a barre letto</h6>
        <p id="barcode-result"></p>
    </div>
    <div class="alert alert-success" role="alert" id="success-message">Product found successfully!</div>
    <div class="alert alert-danger" role="alert" id="error-message">Product not found</div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/quagga/0.12.1/quagga.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function() {
    const barcodeResult = document.getElementById('barcode-result');
    
    function fetchProductMetadata(barcode) {
        fetch(`http://alimentitest.local//myplugin/v1/barcode/${barcode}`)
        .then(response => response.json())
        .then(data => {
            if (data.images.length > 0) {
                const images = data.images.map(image => `<img src="${image}" alt="Immagine">`).join('');
                document.getElementById('image-results').innerHTML = images;
            } else {
                document.getElementById('image-results').innerHTML = '<p>Nessuna immagine trovata per il barcode</p>';
            }
        })
        .catch(error => {
            console.error('Errore durante il recupero delle immagini:', error);
            document.getElementById('image-results').innerHTML = '<p>Errore durante il recupero delle immagini</p>';
        });
    }

    // Chiamiamo fetchProductMetadata() con il valore del barcode quando viene rilevato
    Quagga.onDetected(function(data) {
        if (data && data.codeResult) {
            barcodeResult.innerText = data.codeResult.code;
            fetchProductMetadata(data.codeResult.code);
        }
    });
});
</script>
<script>
document.addEventListener("DOMContentLoaded", function() {
    const imageInput = document.getElementById('image-input');
    const selectedImage = document.getElementById('selected-image');
    const startCameraButton = document.getElementById('start-camera');
    const video = document.getElementById('video');
    const barcodeResult = document.getElementById('barcode-result');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');
    let uploadedImageUrl = '';

    imageInput.addEventListener('change', function(event) {
        const file = event.target.files[0];
        const reader = new FileReader();
        
        reader.onload = function(e) {
            uploadedImageUrl = e.target.result;
            selectedImage.src = uploadedImageUrl;
            selectedImage.style.display = 'block';
            video.style.display = 'none';
            analyzeImage(selectedImage);
        }
        
        if (file) {
            reader.readAsDataURL(file);
        }
    });

    startCameraButton.addEventListener('click', function() {
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } })
                .then(function(stream) {
                    video.srcObject = stream;
                    video.style.display = 'block';
                    selectedImage.style.display = 'none';
                    analyzeVideo();
                })
                .catch(function(err) {
                    console.log("An error occurred: " + err);
                });
        }
    });

    function analyzeImage(image) {
        Quagga.decodeSingle({
            src: image.src,
            numOfWorkers: 0,  // Necessario per evitare problemi con CORS
            decoder: {
                readers: ["code_128_reader", "ean_reader", "ean_8_reader", "code_39_reader", "code_39_vin_reader", "codabar_reader", "upc_reader", "upc_e_reader", "i2of5_reader"]
            },
            locate: true
        }, function(result) {
            if (result && result.codeResult) {
                barcodeResult.innerText = result.codeResult.code;
                fetchProductMetadata(result.codeResult.code);
            } else {
                barcodeResult.innerText = 'No barcode detected.';
            }
        });
    }

    function analyzeVideo() {
        Quagga.init({
            inputStream: {
                name: "Live",
                type: "LiveStream",
                target: video,    // Target il tag video
                constraints: {
                    facingMode: "environment"
                }
            },
            decoder: {
                readers: ["code_128_reader", "ean_reader", "ean_8_reader", "code_39_reader", "code_39_vin_reader", "codabar_reader", "upc_reader", "upc_e_reader", "i2of5_reader"]
            }
        }, function(err) {
            if (err) {
                console.log(err);
                return;
            }
            Quagga.start();
        });

        Quagga.onDetected(function(data) {
            if (data && data.codeResult) {
                barcodeResult.innerText = data.codeResult.code;
                Quagga.stop();
                fetchProductMetadata(data.codeResult.code);
            }
        });
    }

    function fetchProductMetadata(barcode) {
        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json`)
        .then(response => response.json())
        .then(metadata => {
            if (metadata.status === 1) {  // Se il prodotto Ã¨ trovato
                const product = metadata.product;
                let imageUrl = uploadedImageUrl; // Default to uploaded image

                // Try to find the best available image
                if (product.image_front_url) {
                    imageUrl = product.image_front_url;
                } else if (product.images && product.images.front) {
                    if (product.images.front.display && product.images.front.display.it) {
                        imageUrl = product.images.front.display.it;
                    } else if (product.images.front.display && product.images.front.display.fr) {
                        imageUrl = product.images.front.display.fr;
                    } else if (product.images.front.small && product.images.front.small.it) {
                        imageUrl = product.images.front.small.it;
                    } else if (product.images.front.small && product.images.front.small.fr) {
                        imageUrl = product.images.front.small.fr;
                    }
                }

                localStorage.setItem('productImageUrl', imageUrl);
                localStorage.setItem('productMetadata', JSON.stringify(product));
                successMessage.style.display = 'block';
                errorMessage.style.display = 'none';
               const productName = encodeURIComponent(product.product_name || 'unknown');
                window.location.href = `http://alimentitest.local/risultati-scanner-barcode/?barcode=${barcode}&product_name=${productName}`;
            } else {
                successMessage.style.display = 'none';
                errorMessage.style.display = 'block';
            }
        })
        .catch(error => {
            console.error('Error fetching product metadata:', error);
            successMessage.style.display = 'none';
            errorMessage.style.display = 'block';
        });
    }
});
</script>
</body>
</html>
